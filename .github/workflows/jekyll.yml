# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf # v1.146.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: self-hosted
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
  generate_cv:
    runs-on: self-hosted
    needs: deploy

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download PDF
        env:
          CONVERTAPI_TOKEN: ${{ secrets.CONVERTAPI_TOKEN }}
        run: |
          rm -rf assets/pdf/Aleksandre-Ghvineria-CV-EN.pdf
          wget -O web-to-pdf "https://raw.githubusercontent.com/Ghvinerias/learning-golang/refs/heads/main/web-to-pdf/build/linux/web-to-pdf"
          chmod +x ./web-to-pdf
          ./web-to-pdf https://ghvinerias.github.io/online-cv/print
        
      - name: Create assets directory
        run: mkdir -p assets/pdf

      - name: Move PDF to assets directory
        run: mv temp.pdf assets/pdf/Aleksandre-Ghvineria-CV-EN.pdf

      - name: cleanup
        run: rm -rf ./web-to-pdf

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add assets/
          git commit -m "Add generated CV"
          git push